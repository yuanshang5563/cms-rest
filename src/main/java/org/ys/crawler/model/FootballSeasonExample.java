package org.ys.crawler.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FootballSeasonExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    public FootballSeasonExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andFootballSeasonIdIsNull() {
            addCriterion("football_season_id is null");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdIsNotNull() {
            addCriterion("football_season_id is not null");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdEqualTo(String value) {
            addCriterion("football_season_id =", value, "footballSeasonId");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdNotEqualTo(String value) {
            addCriterion("football_season_id <>", value, "footballSeasonId");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdGreaterThan(String value) {
            addCriterion("football_season_id >", value, "footballSeasonId");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdGreaterThanOrEqualTo(String value) {
            addCriterion("football_season_id >=", value, "footballSeasonId");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdLessThan(String value) {
            addCriterion("football_season_id <", value, "footballSeasonId");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdLessThanOrEqualTo(String value) {
            addCriterion("football_season_id <=", value, "footballSeasonId");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdLike(String value) {
            addCriterion("football_season_id like", value, "footballSeasonId");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdNotLike(String value) {
            addCriterion("football_season_id not like", value, "footballSeasonId");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdIn(List<String> values) {
            addCriterion("football_season_id in", values, "footballSeasonId");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdNotIn(List<String> values) {
            addCriterion("football_season_id not in", values, "footballSeasonId");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdBetween(String value1, String value2) {
            addCriterion("football_season_id between", value1, value2, "footballSeasonId");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonIdNotBetween(String value1, String value2) {
            addCriterion("football_season_id not between", value1, value2, "footballSeasonId");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameIsNull() {
            addCriterion("football_season_name is null");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameIsNotNull() {
            addCriterion("football_season_name is not null");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameEqualTo(String value) {
            addCriterion("football_season_name =", value, "footballSeasonName");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameNotEqualTo(String value) {
            addCriterion("football_season_name <>", value, "footballSeasonName");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameGreaterThan(String value) {
            addCriterion("football_season_name >", value, "footballSeasonName");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameGreaterThanOrEqualTo(String value) {
            addCriterion("football_season_name >=", value, "footballSeasonName");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameLessThan(String value) {
            addCriterion("football_season_name <", value, "footballSeasonName");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameLessThanOrEqualTo(String value) {
            addCriterion("football_season_name <=", value, "footballSeasonName");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameLike(String value) {
            addCriterion("football_season_name like", value, "footballSeasonName");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameNotLike(String value) {
            addCriterion("football_season_name not like", value, "footballSeasonName");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameIn(List<String> values) {
            addCriterion("football_season_name in", values, "footballSeasonName");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameNotIn(List<String> values) {
            addCriterion("football_season_name not in", values, "footballSeasonName");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameBetween(String value1, String value2) {
            addCriterion("football_season_name between", value1, value2, "footballSeasonName");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonNameNotBetween(String value1, String value2) {
            addCriterion("football_season_name not between", value1, value2, "footballSeasonName");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlIsNull() {
            addCriterion("football_season_url is null");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlIsNotNull() {
            addCriterion("football_season_url is not null");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlEqualTo(String value) {
            addCriterion("football_season_url =", value, "footballSeasonUrl");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlNotEqualTo(String value) {
            addCriterion("football_season_url <>", value, "footballSeasonUrl");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlGreaterThan(String value) {
            addCriterion("football_season_url >", value, "footballSeasonUrl");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlGreaterThanOrEqualTo(String value) {
            addCriterion("football_season_url >=", value, "footballSeasonUrl");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlLessThan(String value) {
            addCriterion("football_season_url <", value, "footballSeasonUrl");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlLessThanOrEqualTo(String value) {
            addCriterion("football_season_url <=", value, "footballSeasonUrl");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlLike(String value) {
            addCriterion("football_season_url like", value, "footballSeasonUrl");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlNotLike(String value) {
            addCriterion("football_season_url not like", value, "footballSeasonUrl");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlIn(List<String> values) {
            addCriterion("football_season_url in", values, "footballSeasonUrl");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlNotIn(List<String> values) {
            addCriterion("football_season_url not in", values, "footballSeasonUrl");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlBetween(String value1, String value2) {
            addCriterion("football_season_url between", value1, value2, "footballSeasonUrl");
            return (Criteria) this;
        }

        public Criteria andFootballSeasonUrlNotBetween(String value1, String value2) {
            addCriterion("football_season_url not between", value1, value2, "footballSeasonUrl");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdIsNull() {
            addCriterion("football_league_match_id is null");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdIsNotNull() {
            addCriterion("football_league_match_id is not null");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdEqualTo(String value) {
            addCriterion("football_league_match_id =", value, "footballLeagueMatchId");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdNotEqualTo(String value) {
            addCriterion("football_league_match_id <>", value, "footballLeagueMatchId");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdGreaterThan(String value) {
            addCriterion("football_league_match_id >", value, "footballLeagueMatchId");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdGreaterThanOrEqualTo(String value) {
            addCriterion("football_league_match_id >=", value, "footballLeagueMatchId");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdLessThan(String value) {
            addCriterion("football_league_match_id <", value, "footballLeagueMatchId");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdLessThanOrEqualTo(String value) {
            addCriterion("football_league_match_id <=", value, "footballLeagueMatchId");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdLike(String value) {
            addCriterion("football_league_match_id like", value, "footballLeagueMatchId");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdNotLike(String value) {
            addCriterion("football_league_match_id not like", value, "footballLeagueMatchId");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdIn(List<String> values) {
            addCriterion("football_league_match_id in", values, "footballLeagueMatchId");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdNotIn(List<String> values) {
            addCriterion("football_league_match_id not in", values, "footballLeagueMatchId");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdBetween(String value1, String value2) {
            addCriterion("football_league_match_id between", value1, value2, "footballLeagueMatchId");
            return (Criteria) this;
        }

        public Criteria andFootballLeagueMatchIdNotBetween(String value1, String value2) {
            addCriterion("football_league_match_id not between", value1, value2, "footballLeagueMatchId");
            return (Criteria) this;
        }

        public Criteria andSeasonBeginDateIsNull() {
            addCriterion("season_begin_date is null");
            return (Criteria) this;
        }

        public Criteria andSeasonBeginDateIsNotNull() {
            addCriterion("season_begin_date is not null");
            return (Criteria) this;
        }

        public Criteria andSeasonBeginDateEqualTo(Date value) {
            addCriterionForJDBCDate("season_begin_date =", value, "seasonBeginDate");
            return (Criteria) this;
        }

        public Criteria andSeasonBeginDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("season_begin_date <>", value, "seasonBeginDate");
            return (Criteria) this;
        }

        public Criteria andSeasonBeginDateGreaterThan(Date value) {
            addCriterionForJDBCDate("season_begin_date >", value, "seasonBeginDate");
            return (Criteria) this;
        }

        public Criteria andSeasonBeginDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("season_begin_date >=", value, "seasonBeginDate");
            return (Criteria) this;
        }

        public Criteria andSeasonBeginDateLessThan(Date value) {
            addCriterionForJDBCDate("season_begin_date <", value, "seasonBeginDate");
            return (Criteria) this;
        }

        public Criteria andSeasonBeginDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("season_begin_date <=", value, "seasonBeginDate");
            return (Criteria) this;
        }

        public Criteria andSeasonBeginDateIn(List<Date> values) {
            addCriterionForJDBCDate("season_begin_date in", values, "seasonBeginDate");
            return (Criteria) this;
        }

        public Criteria andSeasonBeginDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("season_begin_date not in", values, "seasonBeginDate");
            return (Criteria) this;
        }

        public Criteria andSeasonBeginDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("season_begin_date between", value1, value2, "seasonBeginDate");
            return (Criteria) this;
        }

        public Criteria andSeasonBeginDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("season_begin_date not between", value1, value2, "seasonBeginDate");
            return (Criteria) this;
        }

        public Criteria andSeasonEndDateIsNull() {
            addCriterion("season_end_date is null");
            return (Criteria) this;
        }

        public Criteria andSeasonEndDateIsNotNull() {
            addCriterion("season_end_date is not null");
            return (Criteria) this;
        }

        public Criteria andSeasonEndDateEqualTo(Date value) {
            addCriterionForJDBCDate("season_end_date =", value, "seasonEndDate");
            return (Criteria) this;
        }

        public Criteria andSeasonEndDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("season_end_date <>", value, "seasonEndDate");
            return (Criteria) this;
        }

        public Criteria andSeasonEndDateGreaterThan(Date value) {
            addCriterionForJDBCDate("season_end_date >", value, "seasonEndDate");
            return (Criteria) this;
        }

        public Criteria andSeasonEndDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("season_end_date >=", value, "seasonEndDate");
            return (Criteria) this;
        }

        public Criteria andSeasonEndDateLessThan(Date value) {
            addCriterionForJDBCDate("season_end_date <", value, "seasonEndDate");
            return (Criteria) this;
        }

        public Criteria andSeasonEndDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("season_end_date <=", value, "seasonEndDate");
            return (Criteria) this;
        }

        public Criteria andSeasonEndDateIn(List<Date> values) {
            addCriterionForJDBCDate("season_end_date in", values, "seasonEndDate");
            return (Criteria) this;
        }

        public Criteria andSeasonEndDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("season_end_date not in", values, "seasonEndDate");
            return (Criteria) this;
        }

        public Criteria andSeasonEndDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("season_end_date between", value1, value2, "seasonEndDate");
            return (Criteria) this;
        }

        public Criteria andSeasonEndDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("season_end_date not between", value1, value2, "seasonEndDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cr_football_season
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cr_football_season
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}