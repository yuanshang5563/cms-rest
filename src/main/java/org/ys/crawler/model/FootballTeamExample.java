package org.ys.crawler.model;

import java.util.ArrayList;
import java.util.List;

public class FootballTeamExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    public FootballTeamExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFootballTeamIdIsNull() {
            addCriterion("football_team_id is null");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdIsNotNull() {
            addCriterion("football_team_id is not null");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdEqualTo(String value) {
            addCriterion("football_team_id =", value, "footballTeamId");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdNotEqualTo(String value) {
            addCriterion("football_team_id <>", value, "footballTeamId");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdGreaterThan(String value) {
            addCriterion("football_team_id >", value, "footballTeamId");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdGreaterThanOrEqualTo(String value) {
            addCriterion("football_team_id >=", value, "footballTeamId");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdLessThan(String value) {
            addCriterion("football_team_id <", value, "footballTeamId");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdLessThanOrEqualTo(String value) {
            addCriterion("football_team_id <=", value, "footballTeamId");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdLike(String value) {
            addCriterion("football_team_id like", value, "footballTeamId");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdNotLike(String value) {
            addCriterion("football_team_id not like", value, "footballTeamId");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdIn(List<String> values) {
            addCriterion("football_team_id in", values, "footballTeamId");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdNotIn(List<String> values) {
            addCriterion("football_team_id not in", values, "footballTeamId");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdBetween(String value1, String value2) {
            addCriterion("football_team_id between", value1, value2, "footballTeamId");
            return (Criteria) this;
        }

        public Criteria andFootballTeamIdNotBetween(String value1, String value2) {
            addCriterion("football_team_id not between", value1, value2, "footballTeamId");
            return (Criteria) this;
        }

        public Criteria andTeamNameIsNull() {
            addCriterion("team_name is null");
            return (Criteria) this;
        }

        public Criteria andTeamNameIsNotNull() {
            addCriterion("team_name is not null");
            return (Criteria) this;
        }

        public Criteria andTeamNameEqualTo(String value) {
            addCriterion("team_name =", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameNotEqualTo(String value) {
            addCriterion("team_name <>", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameGreaterThan(String value) {
            addCriterion("team_name >", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameGreaterThanOrEqualTo(String value) {
            addCriterion("team_name >=", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameLessThan(String value) {
            addCriterion("team_name <", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameLessThanOrEqualTo(String value) {
            addCriterion("team_name <=", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameLike(String value) {
            addCriterion("team_name like", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameNotLike(String value) {
            addCriterion("team_name not like", value, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameIn(List<String> values) {
            addCriterion("team_name in", values, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameNotIn(List<String> values) {
            addCriterion("team_name not in", values, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameBetween(String value1, String value2) {
            addCriterion("team_name between", value1, value2, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamNameNotBetween(String value1, String value2) {
            addCriterion("team_name not between", value1, value2, "teamName");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameIsNull() {
            addCriterion("team_other_name is null");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameIsNotNull() {
            addCriterion("team_other_name is not null");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameEqualTo(String value) {
            addCriterion("team_other_name =", value, "teamOtherName");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameNotEqualTo(String value) {
            addCriterion("team_other_name <>", value, "teamOtherName");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameGreaterThan(String value) {
            addCriterion("team_other_name >", value, "teamOtherName");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameGreaterThanOrEqualTo(String value) {
            addCriterion("team_other_name >=", value, "teamOtherName");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameLessThan(String value) {
            addCriterion("team_other_name <", value, "teamOtherName");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameLessThanOrEqualTo(String value) {
            addCriterion("team_other_name <=", value, "teamOtherName");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameLike(String value) {
            addCriterion("team_other_name like", value, "teamOtherName");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameNotLike(String value) {
            addCriterion("team_other_name not like", value, "teamOtherName");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameIn(List<String> values) {
            addCriterion("team_other_name in", values, "teamOtherName");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameNotIn(List<String> values) {
            addCriterion("team_other_name not in", values, "teamOtherName");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameBetween(String value1, String value2) {
            addCriterion("team_other_name between", value1, value2, "teamOtherName");
            return (Criteria) this;
        }

        public Criteria andTeamOtherNameNotBetween(String value1, String value2) {
            addCriterion("team_other_name not between", value1, value2, "teamOtherName");
            return (Criteria) this;
        }

        public Criteria andTeamCommentIsNull() {
            addCriterion("team_comment is null");
            return (Criteria) this;
        }

        public Criteria andTeamCommentIsNotNull() {
            addCriterion("team_comment is not null");
            return (Criteria) this;
        }

        public Criteria andTeamCommentEqualTo(String value) {
            addCriterion("team_comment =", value, "teamComment");
            return (Criteria) this;
        }

        public Criteria andTeamCommentNotEqualTo(String value) {
            addCriterion("team_comment <>", value, "teamComment");
            return (Criteria) this;
        }

        public Criteria andTeamCommentGreaterThan(String value) {
            addCriterion("team_comment >", value, "teamComment");
            return (Criteria) this;
        }

        public Criteria andTeamCommentGreaterThanOrEqualTo(String value) {
            addCriterion("team_comment >=", value, "teamComment");
            return (Criteria) this;
        }

        public Criteria andTeamCommentLessThan(String value) {
            addCriterion("team_comment <", value, "teamComment");
            return (Criteria) this;
        }

        public Criteria andTeamCommentLessThanOrEqualTo(String value) {
            addCriterion("team_comment <=", value, "teamComment");
            return (Criteria) this;
        }

        public Criteria andTeamCommentLike(String value) {
            addCriterion("team_comment like", value, "teamComment");
            return (Criteria) this;
        }

        public Criteria andTeamCommentNotLike(String value) {
            addCriterion("team_comment not like", value, "teamComment");
            return (Criteria) this;
        }

        public Criteria andTeamCommentIn(List<String> values) {
            addCriterion("team_comment in", values, "teamComment");
            return (Criteria) this;
        }

        public Criteria andTeamCommentNotIn(List<String> values) {
            addCriterion("team_comment not in", values, "teamComment");
            return (Criteria) this;
        }

        public Criteria andTeamCommentBetween(String value1, String value2) {
            addCriterion("team_comment between", value1, value2, "teamComment");
            return (Criteria) this;
        }

        public Criteria andTeamCommentNotBetween(String value1, String value2) {
            addCriterion("team_comment not between", value1, value2, "teamComment");
            return (Criteria) this;
        }

        public Criteria andCountryIsNull() {
            addCriterion("country is null");
            return (Criteria) this;
        }

        public Criteria andCountryIsNotNull() {
            addCriterion("country is not null");
            return (Criteria) this;
        }

        public Criteria andCountryEqualTo(String value) {
            addCriterion("country =", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotEqualTo(String value) {
            addCriterion("country <>", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryGreaterThan(String value) {
            addCriterion("country >", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryGreaterThanOrEqualTo(String value) {
            addCriterion("country >=", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryLessThan(String value) {
            addCriterion("country <", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryLessThanOrEqualTo(String value) {
            addCriterion("country <=", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryLike(String value) {
            addCriterion("country like", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotLike(String value) {
            addCriterion("country not like", value, "country");
            return (Criteria) this;
        }

        public Criteria andCountryIn(List<String> values) {
            addCriterion("country in", values, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotIn(List<String> values) {
            addCriterion("country not in", values, "country");
            return (Criteria) this;
        }

        public Criteria andCountryBetween(String value1, String value2) {
            addCriterion("country between", value1, value2, "country");
            return (Criteria) this;
        }

        public Criteria andCountryNotBetween(String value1, String value2) {
            addCriterion("country not between", value1, value2, "country");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cr_football_team
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cr_football_team
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}